/*
  Foundation 3, artfully masterminded by ZURB
  Core
  grid.css - Twelve column responsive grid

  Requires:
    boxsizing.htc for IE7 support
*/

  @import "base";

  $row_width: 1000px;
  $column_gutter: 30px;
  $number_of_columns: 12;

  @function grid-calc($row_number, $number_of_columns) {
    @return percentage(($row_number / $number_of_columns));
  }

  .row { width: $row_width; max-width: 100%; min-width: 768px; margin: 0 auto;
  
    &.collapse {
      .column, .columns { padding: 0; }
    }
    
    .row { width: auto; max-width: none; min-width: 0; margin: 0 (-($column_gutter/2));  
      &.collapse { margin: 0; }
    }
  }

  .column, .columns { float: left; min-height: 1px; padding: 0 ($column_gutter/2); position: relative; 
    
    &.centered { float: none; margin: 0 auto; }
  }

  [class*="column"] + [class*="column"]:last-child { float: right; }
  [class*="column"] + [class*="column"].end { float: left; }

  @for $i from 1 through $number-of-columns {
    .row {
      .#{convert-number-to-word($i)} {
        width: grid-calc($i, $number_of_columns);
      }
    }
  }
  @for $i from 1 through $number-of-columns - 2 {
    .row {
      .offset-by-#{convert-number-to-word($i)} {
        margin-left: grid-calc($i, $number_of_columns);
      }
    }
  }
  @for $i from 2 through $number-of-columns - 2 {
    .push-#{convert-number-to-word($i)} {
      left: grid-calc($i, $number_of_columns);
    }
    .pull-#{convert-number-to-word($i)} {
      right: grid-calc($i, $number_of_columns);
    }
  }

  img, object, embed { max-width: 100%; height: auto; }
  img { -ms-interpolation-mode: bicubic; }
  #map_canvas img, .map_canvas img {max-width: none!important;}

  /* Nicolas Gallagher's micro clearfix */
  .row:before, .row:after, .clearfix:before, .clearfix:after { content:""; display:table; }
  .row:after, .clearfix:after { clear: both; }
  .row, .clearfix { zoom: 1; }

  /* Mobile */
  @media #{$media-small} {
    body { -webkit-text-size-adjust: none; -ms-text-size-adjust: none; width: 100%; min-width: 0; margin-left: 0; margin-right: 0; padding-left: 0; padding-right: 0; }

    .row { width: auto; min-width: 0; margin-left: 0; margin-right: 0; }
    .column, .columns { width: auto !important; float: none;  }
    .column:last-child, .columns:last-child { float: none; }
    [class*="column"] + [class*="column"]:last-child { float: none; }
    .column:before, .columns:before, .column:after, .columns:after { content:""; display:table; }
    .column:after, .columns:after { clear: both; }

    // Silent Placeholder classes for mobile grid overrides
    %no-left-margin { margin-left: 0 !important; }
    %left-auto { left: auto; }
    %right-auto { right: auto; }

    @for $i from 1 through $number-of-columns - 2 {
      .offset-by-#{convert-number-to-word($i)} {
        @extend %no-left-margin;
      }
    }
    @for $i from 2 through $number-of-columns - 2 {
      .push-#{convert-number-to-word($i)} {
        @extend %left-auto;
      }
      .pull-#{convert-number-to-word($i)} {
        @extend %right-auto;
      }
    }

    /* Mobile 4-column Grid */
    .row {
      .phone-one,
      .phone-two,
      .phone-three,
      .phone-four { float: left; padding: 0 15px;
        &:last-child { float: right; }
      }
      .phone-one { width: 25% !important; }
      .phone-two { width: 50% !important; }
      .phone-three { width: 75% !important; }
      .phone-four { width: 100% !important; }

      .push-one-phone { left: 25%; }
      .push-two-phone { left: 50% }
      .push-three-phone { left: 75% }

      .pull-one-phone { right: 25% }
      .pull-two-phone { right: 50% }
      .pull-three-phone { right: 75%; }
    }
  }

/*  --------------------------------------------------
:: Block grids

These are 2-up, 3-up, 4-up and 5-up ULs, suited
for repeating blocks of content. Add 'mobile' to
them to switch them just like the layout grid
(one item per line) on phones

For IE7/8 compatibility block-grid items need to be
the same height. You can optionally uncomment the
lines below to support arbitrary height, but know
that IE7/8 do not support :nth-child.
-------------------------------------------------- */

  .block-grid { display: block; overflow: hidden; padding: 0; 
    
    &>li { display: block; height: auto; float: left; }
  }

  .block-grid.two-up { margin: 0 -15px; }
  .block-grid.two-up>li { width: 50%; padding: 0 15px 15px; }
  /*  .block-grid.two-up>li:nth-child(2n+1) {clear: left;} */

  .block-grid.three-up { margin: 0 -12px; }
  .block-grid.three-up>li { width: 33.33%; padding: 0 12px 12px; }
  /*  .block-grid.three-up>li:nth-child(3n+1) {clear: left;} */

  .block-grid.four-up { margin: 0 -10px; }
  .block-grid.four-up>li { width: 25%; padding: 0 10px 10px; }
  /*  .block-grid.four-up>li:nth-child(4n+1) {clear: left;} */

  .block-grid.five-up { margin: 0 -8px; }
  .block-grid.five-up>li { width: 20%; padding: 0 8px 8px; }
  /*  .block-grid.five-up>li:nth-child(5n+1) {clear: left;} */

  /* Mobile */

  @media #{$media-small} {
    .block-grid.mobile { margin-left: 0; }
    .block-grid.mobile > li { float: none; width: 100%; margin-left: 0; }
  }
